@page "/"
@inject NavigationManager Nav
@inject IJSRuntime JS

<MudContainer MaxWidth="MaxWidth.False" Class="landing-hero text-center" id="hero">
    <MudText Typo="Typo.h2">Welcome to MudBlazor Ecommerce</MudText>
    <MudText Typo="Typo.subtitle1" Class="mb-8">Find your favorite products and enjoy fast delivery.</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => Nav.NavigateTo("products"))">
        Shop Now
    </MudButton>
</MudContainer>

<MudContainer Class="features-section">
    <MudGrid>
        @for (int idx = 0; idx < Features.Count; idx++)
        {
            var feature = Features[idx];
            <MudItem xs="12" md="4">
                <MudPaper Class="pa-6 text-center feature-card" id="@($"feature-{idx}")">
                    <MudIcon Icon="@feature.Icon" Size="Size.Large" Color="Color.Primary" />
                    <MudText Typo="Typo.h6" Class="mt-4">@feature.Title</MudText>
                    <MudText>@feature.Description</MudText>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
    private record Feature(string Icon, string Title, string Description);

    private List<Feature> Features = new()
    {
        new Feature(Icons.Material.Filled.LocalShipping, "Fast Delivery", "Get your orders quickly."),
        new Feature(Icons.Material.Filled.Lock, "Secure Payment", "Your transactions are safe."),
        new Feature(Icons.Material.Filled.Star, "Top Quality", "Only the best products.")
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("gsapBlazor.animateHero", "#hero");
            await JS.InvokeVoidAsync("gsapBlazor.animateFeatures", ".feature-card");
        }
    }
}
